From f98cbea138095a46570912a2f624b82dff109d55 Mon Sep 17 00:00:00 2001
From: Mike Perry <mikeperry-git@torproject.org>
Date: Wed, 28 Nov 2012 17:08:29 -0500
Subject: [PATCH 19/27] Add mozIThirdPartyUtil.getFirstPartyURI API

API allows you to get the url bar URI for a channel or nsIDocument.
---
 content/base/src/ThirdPartyUtil.cpp        |   68 ++++++++++++++++++++++++++++
 content/base/src/ThirdPartyUtil.h          |    2 +
 netwerk/base/public/mozIThirdPartyUtil.idl |   21 +++++++++
 3 files changed, 91 insertions(+), 0 deletions(-)

diff --git a/content/base/src/ThirdPartyUtil.cpp b/content/base/src/ThirdPartyUtil.cpp
index 97a000e..ad1b0fa 100644
--- a/content/base/src/ThirdPartyUtil.cpp
+++ b/content/base/src/ThirdPartyUtil.cpp
@@ -7,6 +7,9 @@
 #include "nsIServiceManager.h"
 #include "nsIHttpChannelInternal.h"
 #include "nsIDOMWindow.h"
+#include "nsICookiePermission.h"
+#include "nsIDOMDocument.h"
+#include "nsIDocument.h"
 #include "nsILoadContext.h"
 #include "nsIPrincipal.h"
 #include "nsIScriptObjectPrincipal.h"
@@ -21,6 +24,7 @@ ThirdPartyUtil::Init()
 
   nsresult rv;
   mTLDService = do_GetService(NS_EFFECTIVETLDSERVICE_CONTRACTID, &rv);
+  mCookiePermissions = do_GetService(NS_COOKIEPERMISSION_CONTRACTID);
   return rv;
 }
 
@@ -282,3 +286,67 @@ ThirdPartyUtil::GetBaseDomain(nsIURI* aHostURI,
 
   return NS_OK;
 }
+
+NS_IMETHODIMP
+ThirdPartyUtil::GetFirstPartyURI(nsIChannel *aChannel,
+                                 nsIDocument *aDoc,
+                                 nsIURI **aOutput)
+{
+  nsresult rv = NS_ERROR_NULL_POINTER;
+
+  if (!aOutput)
+    return rv;
+
+  *aOutput = nullptr;
+
+  if (!aChannel && aDoc) {
+    aChannel = aDoc->GetChannel();
+  }
+
+  // If aChannel is specified or available, use the official route
+  // for sure
+  if (aChannel) {
+    rv = mCookiePermissions->GetOriginatingURI(aChannel, aOutput);
+  }
+
+  // If the channel was missing, closed or broken, try the
+  // window hierarchy directly.
+  //
+  // This might fail to work for first-party loads themselves, but
+  // we don't need this codepath for that case.
+  if (NS_FAILED(rv) && aDoc) {
+    nsCOMPtr<nsIDOMWindow> top;
+    nsCOMPtr<nsIDOMDocument> topDDoc;
+    nsIURI *docURI = nullptr;
+
+    if (aDoc->GetWindow()) {
+      aDoc->GetWindow()->GetTop(getter_AddRefs(top));
+      top->GetDocument(getter_AddRefs(topDDoc));
+
+      nsCOMPtr<nsIDocument> topDoc(do_QueryInterface(topDDoc));
+      docURI = topDoc->GetOriginalURI();
+      if (docURI) {
+        // Give us a mutable URI and also addref
+        rv = NS_EnsureSafeToReturn(docURI, aOutput);
+      }
+    } else {
+      // XXX: Chrome callers (such as NoScript) can end up here
+      // through getImageData/canvas usage with no document state
+      // (no Window and a document URI of about:blank). Propogate
+      // rv fail (by doing nothing), and hope caller recovers.
+    }
+
+    if (*aOutput)
+      rv = NS_OK;
+  }
+
+  // TODO: We could provide a route through the loadgroup + notification
+  // callbacks too, but either channel or document was always available
+  // in the cases where this function was originally needed (the image cache).
+  // The notification callbacks also appear to suffers from the same limitation
+  // as the document path. See nsICookiePermissions.GetOriginatingURI() for
+  // details.
+
+  return rv;
+}
+
diff --git a/content/base/src/ThirdPartyUtil.h b/content/base/src/ThirdPartyUtil.h
index 3f50ac3..fe7b214 100644
--- a/content/base/src/ThirdPartyUtil.h
+++ b/content/base/src/ThirdPartyUtil.h
@@ -9,6 +9,7 @@
 #include "nsString.h"
 #include "mozIThirdPartyUtil.h"
 #include "nsIEffectiveTLDService.h"
+#include "nsICookiePermission.h"
 #include "mozilla/Attributes.h"
 
 class nsIURI;
@@ -29,6 +30,7 @@ private:
   static already_AddRefed<nsIURI> GetURIFromWindow(nsIDOMWindow* aWin);
 
   nsCOMPtr<nsIEffectiveTLDService> mTLDService;
+  nsCOMPtr<nsICookiePermission> mCookiePermissions;
 };
 
 #endif
diff --git a/netwerk/base/public/mozIThirdPartyUtil.idl b/netwerk/base/public/mozIThirdPartyUtil.idl
index 578d8db..963385c 100644
--- a/netwerk/base/public/mozIThirdPartyUtil.idl
+++ b/netwerk/base/public/mozIThirdPartyUtil.idl
@@ -7,6 +7,7 @@
 interface nsIURI;
 interface nsIDOMWindow;
 interface nsIChannel;
+interface nsIDocument;
 
 /**
  * Utility functions for determining whether a given URI, channel, or window
@@ -140,6 +141,26 @@ interface mozIThirdPartyUtil : nsISupports
    * @return the base domain.
    */
   AUTF8String getBaseDomain(in nsIURI aHostURI);
+
+
+  /**
+   * getFirstPartyURI
+   *
+   * Obtain the top-level url bar URI for either a channel or a document.
+   * Either parameter may be null (but not both).
+   *
+   * @param aChannel
+   *        An arbitrary channel for some content element of a first party
+   *        load. Can be null.
+   *
+   * @param aDoc
+   *        An arbitrary third party document. Can be null.
+   *
+   * @return the first party url bar URI for the load.
+   */
+  nsIURI getFirstPartyURI(in nsIChannel aChannel,
+                          in nsIDocument aDoc);
+
 };
 
 %{ C++
-- 
1.7.5.4

